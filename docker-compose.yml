services:
  # PostgreSQL Database Service
  db:
    image: postgres # Use a specific version
    container_name: hospital_middleware_db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # These are typically set in the .env file, but shown here for clarity
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      # Expose PostgreSQL port only to the host's localhost for security,
      # or remove if only accessed by other containers.
      # Use a different host port if 5432 is already in use.
      - "127.0.0.1:5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist database data
    networks:
      - hospital_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
  go_app:
    build:
      context: . # Use the current directory as the build context
      dockerfile: Dockerfile # Specify the Dockerfile name
    container_name: hospital_middleware_go
    restart: unless-stopped
    env_file:
      - .env
    ports:
      # Expose the Go app's internal port
      # Nginx will handle external traffic
       - "127.0.0.1:8080:${SERVER_PORT:-8080}" # Map internal port to host localhost:8080
    depends_on:
      db:
        condition: service_healthy # Wait for the DB to be healthy before starting
    networks:
      - hospital_network
    volumes:
      - go_cache:/go/pkg/mod

  # Nginx Reverse Proxy Service
  nginx:
    image: nginx:1.27.5-alpine
    container_name: hospital_middleware_nginx
    restart: unless-stopped
    ports:
      # Map host port (from .env) to Nginx container port 80
      - "${NGINX_PORT:-80}:80"
    volumes:
      # Mount the custom Nginx configuration
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Mount as read-only
    depends_on:
      - go_app # Nginx depends on the Go application being available
    networks:
      - hospital_network

networks:
  hospital_network:
    driver: bridge # Default Docker network driver

# Define Volumes
volumes:
  postgres_data: # Persists PostgreSQL data across container restarts
  go_cache: # Persists downloaded Go modules (optional)